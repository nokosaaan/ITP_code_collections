#include<bits/stdc++.h>
using namespace std;
int judge(int x){
    bool a=false;
   for(int j=0; j<4; j++){
       
       if(x>=10){
           if(x%10==3){
           a=true;
           }
           x/=10;
           if(x%10==3){
           a=true;
           }
       }
   }
   return a;
}
int main(){
    int n;
    
    cin >> n;
    for(int i=3; i<=n; i++){
        if(i%3==0){
            cout << " " << i;
        }
        else{
            bool b=judge(i);
            if(b==true){
                cout << " " << i;
            }
        }
    }

}
/*感想：クッソ難しい、おそらく初の難易度設定、それくらい
        強烈な問題だった。入力した数字nの間までに3の倍数あるいは
        3を含む数字を表示するプログラムなのだが、
        まず3の倍数を表示するのはこれより前の問題でやっているので
        問題はないだろう。問題は3を含む数字をどうやって
        判別するかという部分である。今回はjudge関数を
        つくってそこの命令文で3を含むかどうか判別しているという構造
        になっている。中身としては、まず2桁の数字であれば、10で
        割ってその割った数を10で割った余りが3であれば3を含む
        ことになる。3桁、4桁、5桁でもこの操作は同様であるから、
        この操作をfor文で一般化することにした。この手法であれば10の位や
        100の位が何であったとしても関係なく処理できる。データがたしか
        5桁の数くらいまでしかなかったのでこの手法が有効だと感じた。
        より大きい数を扱うならこの操作は時間がかかりすぎる。
        例によってbool値で真偽の判定を行っている。この問題ほど
        bool値の恩恵を感じたことはなかった。bool値バンザイ！！！*/